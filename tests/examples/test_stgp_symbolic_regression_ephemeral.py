from examples.stgp_symbolic_regression_ephemeral import *

stdout = """0	34.779765758467704	1929.949896427344	20588.415768389215
1	32.5	230.59360680094431	1319.7207385503998
2	32.215831727764765	203.2726575895383	1805.4810145677488
3	32.215831727764765	176.20389638105144	1136.075983101311
4	32.215831727764765	153.70757001472435	608.0473583995466
5	27.9312403959304	132.5473451913878	331.29159466037146
6	27.9312403959304	222.0878660483859	1868.7545496046846
7	27.9312403959304	157.77732050261488	755.7332974344117
8	27.9312403959304	172.333797411722	883.8125844699373
9	27.9312403959304	194.07288747346885	1165.2759756065514
10	27.9312403959304	364.5914376095368	4699.681970144154
11	25.9312403959304	638.3145242012243	13246.109760015546
12	25.9312403959304	149.69813403378762	551.0252829985919
13	25.9312403959304	369.1654538647854	5779.7964869677035
14	25.9312403959304	153.93398148140963	763.1763865962911
15	25.9312403959304	1977.618005958232	58556.89051756631
16	25.9312403959304	174.2628032294424	993.2377912376131
17	25.9312403959304	171.50556844709538	992.4334385155821
18	25.9312403959304	320.32935320717314	6619.314841129529
19	25.9312403959304	128.22165330069666	579.8901469969927
fitness: 25.9312403959304	genotype: [   6    3    1    3    2 8031    9    1    9    9    9    5    1    9
    4    1    9    9    5    5   13   33   15    1    9    9    9    0
    0    0    0    0    0    0    0    0    0    0    0    0    0    0
    0    0    0    0    0    0    0    0    0    0    0    0    0    0
    0    0    0    0    0    0    0    0    0    0    0    0    0    0
    0    0    0    0    0    0    0    0    0    0    0    0    0    0
    0    0    0    0    0    0    0    0    0    0    0    0    0    0
    0    0    0    0    0    0    0    0    0    0    0    0    0    0
    0    0    0    0    0    0    0    0    0    0    0    0    0    0
    0    0    0    0    0    0    0    0    0    0    0    0    0    0
    0    0    0    0    0    0    0    0    0    0    0    0    0    0
    0    0    0    0    0    0    0    0    0    0    0    0    0    0
    0    0    0    0    0    0    0    0    0    0    0    0    0    0
    0    0    0    0    0    0    0    0    0    0    0    0    0    0
    0    0    0    0    0    0    0    0    0    0    0    0    0    0
    0    0    0    0    0    0    0    0    0    0    0    0    0    0
    0    0    0    0    0    0    0    0    0    0    0    0    0    0
    0    0    0    0    0    0    0    0    0    0    0    0    0    0
    0    0    0    0]
"""


def test_stgp_with_elitism_ephemeral(capfd):
    stgp_with_elitism_ephemeral()
    out, err = capfd.readouterr()
    assert out == stdout
